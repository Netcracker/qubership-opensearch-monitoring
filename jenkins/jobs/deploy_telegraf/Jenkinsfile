node {
    def newlineSeparator = "\\r?\\n"
    def commaSeparator = ","

    env.OS_PROJECT = "${OS_PROJECT}"
    env.SERVICE_NAME = "${SERVICE_NAME}"
    env.IMAGE = "${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}"

    env.MEMORY_REQUEST = "${MEMORY_REQUEST}"
    env.CPU_REQUEST = "${CPU_REQUEST}"
    env.MEMORY_LIMIT = "${MEMORY_LIMIT}"
    env.CPU_LIMIT = "${CPU_LIMIT}"

    env.OS_HOST = "${OS_HOST}"
    env.OS_ADMINISTRATOR_NAME = "${OS_ADMINISTRATOR_NAME}"
    env.OS_ADMINISTRATOR_PASSWORD = "${OS_ADMINISTRATOR_PASSWORD}"

    env.SM_DB_HOST = "${SM_DB_HOST}"
    env.SM_DB_NAME = "${SM_DB_NAME}"
    env.SM_DB_USERNAME = "${SM_DB_USERNAME}"
    env.SM_DB_PASSWORD = "${SM_DB_PASSWORD}"
    env.ELASTICSEARCH_DATA_NODES_COUNT = "${ELASTICSEARCH_DATA_NODES_COUNT}"
    env.ELASTICSEARCH_TOTAL_NODES_COUNT = "${ELASTICSEARCH_TOTAL_NODES_COUNT}"
    env.NODE_LABELS = "${NODE_LABELS}"
    env.REQUIRED_AFFINITY = "${REQUIRED_AFFINITY}"
    env.PREFERRED_AFFINITY = "${PREFERRED_AFFINITY}"
    env.REQUIRED_ANTI_AFFINITY = "${REQUIRED_ANTI_AFFINITY}"
    env.PREFERRED_ANTI_AFFINITY = "${PREFERRED_ANTI_AFFINITY}"
    env.ELASTICSEARCH_HOST = "${ELASTICSEARCH_HOST}"
    env.ELASTICSEARCH_PORT = "${ELASTICSEARCH_PORT}"
    env.ELASTICSEARCH_DBAAS_ADAPTER_HOST = "${ELASTICSEARCH_DBAAS_ADAPTER_HOST}"
    env.ELASTICSEARCH_DBAAS_ADAPTER_PORT = "${ELASTICSEARCH_DBAAS_ADAPTER_PORT}"
    env.TLS_HTTP_ENABLED = "${TLS_HTTP_ENABLED}"
    env.ELASTICSEARCH_USERNAME = "${ELASTICSEARCH_USERNAME}"
    env.ELASTICSEARCH_PASSWORD = "${ELASTICSEARCH_PASSWORD}"

    deleteDir()

    stage 'checkout'
    checkout scm

    stage 'deploy to openshift'
    sh './download_deployment_utils.sh && cd openshift/deploy && chmod +x *.sh && ./install.sh'
}
